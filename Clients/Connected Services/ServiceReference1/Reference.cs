//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Clients.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Flight", Namespace="http://schemas.datacontract.org/2004/07/Service")]
    [System.SerializableAttribute()]
    public partial class Flight : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ArrivalDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DepDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FlightNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ArrivalD {
            get {
                return this.ArrivalDField;
            }
            set {
                if ((this.ArrivalDField.Equals(value) != true)) {
                    this.ArrivalDField = value;
                    this.RaisePropertyChanged("ArrivalD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DepDate {
            get {
                return this.DepDateField;
            }
            set {
                if ((this.DepDateField.Equals(value) != true)) {
                    this.DepDateField = value;
                    this.RaisePropertyChanged("DepDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FlightNumber {
            get {
                return this.FlightNumberField;
            }
            set {
                if ((this.FlightNumberField.Equals(value) != true)) {
                    this.FlightNumberField = value;
                    this.RaisePropertyChanged("FlightNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationF {
            get {
                return this.LocationFField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationFField, value) != true)) {
                    this.LocationFField = value;
                    this.RaisePropertyChanged("LocationF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationT {
            get {
                return this.LocationTField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationTField, value) != true)) {
                    this.LocationTField = value;
                    this.RaisePropertyChanged("LocationT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFlights", ReplyAction="http://tempuri.org/IService1/GetFlightsResponse")]
        System.Collections.Generic.List<Clients.ServiceReference1.Flight> GetFlights();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFlights", ReplyAction="http://tempuri.org/IService1/GetFlightsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Clients.ServiceReference1.Flight>> GetFlightsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetByFn", ReplyAction="http://tempuri.org/IService1/GetByFnResponse")]
        Clients.ServiceReference1.Flight GetByFn(int flightnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetByFn", ReplyAction="http://tempuri.org/IService1/GetByFnResponse")]
        System.Threading.Tasks.Task<Clients.ServiceReference1.Flight> GetByFnAsync(int flightnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateFlight", ReplyAction="http://tempuri.org/IService1/UpdateFlightResponse")]
        void UpdateFlight(int fn, string t, string lf, string lt, System.DateTime dd, System.DateTime ad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateFlight", ReplyAction="http://tempuri.org/IService1/UpdateFlightResponse")]
        System.Threading.Tasks.Task UpdateFlightAsync(int fn, string t, string lf, string lt, System.DateTime dd, System.DateTime ad);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Clients.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Clients.ServiceReference1.IService1>, Clients.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<Clients.ServiceReference1.Flight> GetFlights() {
            return base.Channel.GetFlights();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Clients.ServiceReference1.Flight>> GetFlightsAsync() {
            return base.Channel.GetFlightsAsync();
        }
        
        public Clients.ServiceReference1.Flight GetByFn(int flightnumber) {
            return base.Channel.GetByFn(flightnumber);
        }
        
        public System.Threading.Tasks.Task<Clients.ServiceReference1.Flight> GetByFnAsync(int flightnumber) {
            return base.Channel.GetByFnAsync(flightnumber);
        }
        
        public void UpdateFlight(int fn, string t, string lf, string lt, System.DateTime dd, System.DateTime ad) {
            base.Channel.UpdateFlight(fn, t, lf, lt, dd, ad);
        }
        
        public System.Threading.Tasks.Task UpdateFlightAsync(int fn, string t, string lf, string lt, System.DateTime dd, System.DateTime ad) {
            return base.Channel.UpdateFlightAsync(fn, t, lf, lt, dd, ad);
        }
    }
}
